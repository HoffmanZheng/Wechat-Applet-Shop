<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.github.NervousOrange</groupId>
	<artifactId>wxshop-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>wxshop-parent</name>
	<description>wxshop Spring Boot</description>
	<packaging>pom</packaging>

	<properties>
		<java.version>1.8</java.version>
		<spring.boot.version>2.5.12</spring.boot.version>
		<dubbo.version>2.7.6</dubbo.version>
	</properties>

	<modules>
		<module>wxshop-api</module>
		<module>wxshop-order</module>
		<module>wxshop-main</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-redis-reactive</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-jdbc</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>2.2.0</version>
			</dependency>

			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>8.0.28</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring.boot.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>org.junit.vintage</groupId>
						<artifactId>junit-vintage-engine</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- httpClient 用于集成测试，模拟发送 HTTP 请求 -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.5.13</version>
				<scope>test</scope>
			</dependency>
			<!-- flyway Java Api 在集成测试中用于初始化数据库 -->
			<!-- 使用 6.x.x 版本，参见：https://github.com/flyway/flyway/issues/2962 -->
			<dependency>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-core</artifactId>
				<version>6.5.7</version>
				<scope>test</scope>
			</dependency>
			<!-- spotbugs 注解：用于忽略某些检查 -->
			<!--<dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>annotations</artifactId>
                <version>3.0.1</version>
            </dependency>-->
			<!-- 分页插件 -->
			<!--<dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>5.2.0</version>
            </dependency>-->
			<!--dubbo RPC-->
			<dependency>
				<groupId>org.apache.dubbo</groupId>
				<artifactId>dubbo-spring-boot-starter</artifactId>
				<version>${dubbo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.dubbo</groupId>
				<artifactId>dubbo-dependencies-zookeeper</artifactId>
				<version>${dubbo.version}</version>
				<type>pom</type>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>
				<!-- checkstyle 代码规范检查工具 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>3.1.2</version>
					<configuration>
						<configLocation>${basedir}\checkstyle.xml</configLocation>
						<includeTestSourceDirectory>true</includeTestSourceDirectory>
						<enableRulesSummary>false</enableRulesSummary>
						<excludes>**/generated/**/*</excludes> <!--检查时排除 mybatis generator 自动生成的代码-->
					</configuration>
					<executions>
						<execution>
							<id>compile</id>  <!-- 将 checkStyle 绑定到 maven compile 周期 -->
							<phase>compile</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>8.29</version>
						</dependency>
					</dependencies>
				</plugin>
				<!-- spotbugs 发现潜在的 bug 风险 -->
				<plugin>
					<groupId>com.github.spotbugs</groupId>
					<artifactId>spotbugs-maven-plugin</artifactId>
					<version>3.1.12</version>
					<configuration>
						<!--检查时排除 mybatis generator 自动生成的代码-->
						<excludeFilterFile>${basedir}\src\main\resources\ignore.xml</excludeFilterFile>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>com.github.spotbugs</groupId>
							<artifactId>spotbugs</artifactId>
							<version>4.0.0-beta5</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<id>spotbugs</id>
							<phase>verify</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- jacoco 代码测试覆盖率报告 -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.5</version>
					<configuration>
						<!-- 测试覆盖率报告中排除 mybatis generator 自动生成的代码 -->
						<excludes>
							<exclude>**/generated/**/*</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<id>default-prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<!-- 会在 target/site/jacoco 目录下生成测试覆盖率报告 -->
							<id>default-report</id>
							<phase>verify</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
						<execution>
							<id>default-check</id>
							<goals>
								<goal>check</goal>
							</goals>
							<configuration>
								<rules>
									<rule>
										<element>BUNDLE</element>
										<limits>
											<limit>
												<counter>COMPLEXITY</counter>
												<value>COVEREDRATIO</value>
												<!--测试覆盖率要求-->
												<minimum>0.50</minimum>
											</limit>
										</limits>
									</rule>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!--flyway 数据库自动迁移工具，且可以进行版本控制-->
				<plugin>
					<groupId>org.flywaydb</groupId>
					<artifactId>flyway-maven-plugin</artifactId>
					<version>6.4.1</version>
					<configuration>
						<!-- 如果数据库不存在，就自动创建 createDatabaseIfNotExist=true -->
						<url>jdbc:mysql://localhost:3306/wxshop?createDatabaseIfNotExist=true&amp;characterEncoding=utf-8</url>
						<user>root</user>
						<password>123456</password>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>mysql</groupId>
							<artifactId>mysql-connector-java</artifactId>
							<version>8.0.28</version>
						</dependency>
					</dependencies>
				</plugin>
				<!-- mybatis generator 自动生成 dao 层 xml 文件 -->
				<plugin>
					<groupId>org.mybatis.generator</groupId>
					<artifactId>mybatis-generator-maven-plugin</artifactId>
					<version>1.3.7</version>
					<!-- 给 mybatis generator 用的 mysql driver, 不加它自己找不到 -->
					<dependencies>
						<dependency>
							<groupId>mysql</groupId>
							<artifactId>mysql-connector-java</artifactId>
							<version>8.0.28</version>
						</dependency>
						<dependency>
							<groupId>com.qiukeke</groupId>
							<artifactId>mybatis-generator-limit-plugin</artifactId>
							<version>1.0.4</version>
						</dependency>
					</dependencies>
					<configuration>
						<!-- 如果要生成的类已经存在了，就重写覆盖，而不是生成新的文件 -->
						<overwrite>true</overwrite>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
